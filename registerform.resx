<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>